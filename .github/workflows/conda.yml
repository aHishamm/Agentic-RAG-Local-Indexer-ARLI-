name: Python Conda CI

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: agentic_rag
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    
    - name: Install conda dependencies
      run: |
        conda install -c conda-forge pip python=3.11
    
    - name: Create HF_Models directory
      run: |
        mkdir -p HF_Models/{datasets,hub,metrics,models}
    
    - name: Install project dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run Tests
      env:
        DEBUG: 'True'
        SECRET_KEY: 'test-key-for-ci'
        ALLOWED_HOSTS: 'localhost,127.0.0.1,[::1]'
        DB_NAME: 'agentic_rag'
        DB_USER: 'postgres'
        DB_PASSWORD: 'postgrespassword'
        DB_HOST: 'localhost'
        DB_PORT: '5432'
        DJANGO_SETTINGS_MODULE: 'core.settings'
        USE_TZ: 'True'
        TIME_ZONE: 'UTC'
      run: |
        cd src
        python manage.py test